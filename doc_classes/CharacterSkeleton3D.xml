<?xml version="1.0" encoding="UTF-8" ?>
<class name="CharacterSkeleton3D" inherits="Spatial" version="3.2">
	<brief_description>
		3d implementation for [CharacterSkeleton].
		
		Note: Most of the logic implementation for this is still in gdscript. It will be ported.
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_build_model" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_common_attach_point_index_get" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="point" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_model_visual">
			<return type="void">
			</return>
			<argument index="0" name="vis" type="ModelVisual">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_model_visual_entry">
			<return type="void">
			</return>
			<argument index="0" name="vis" type="ModelVisual">
			</argument>
			<argument index="1" name="ive" type="ModelVisualEntry">
			</argument>
			<description>
			</description>
		</method>
		<method name="attach_point_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="attach_point_node_get">
			<return type="Node">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="attach_point_path_get" qualifiers="const">
			<return type="NodePath">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="attach_point_path_set">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<argument index="1" name="path" type="NodePath">
			</argument>
			<description>
			</description>
		</method>
		<method name="bake_mesh_array_uv" qualifiers="const">
			<return type="Array">
			</return>
			<argument index="0" name="arr" type="Array">
			</argument>
			<argument index="1" name="tex" type="Texture">
			</argument>
			<argument index="2" name="mul_color" type="float" default="0.7">
			</argument>
			<description>
			</description>
		</method>
		<method name="build_model">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_model_visuals">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="common_attach_point_add">
			<return type="void">
			</return>
			<argument index="0" name="point" type="int" enum="EntityEnums.CommonCharacterSkeletonPoints">
			</argument>
			<argument index="1" name="scene" type="PackedScene">
			</argument>
			<description>
			</description>
		</method>
		<method name="common_attach_point_add_timed">
			<return type="void">
			</return>
			<argument index="0" name="point" type="int" enum="EntityEnums.CommonCharacterSkeletonPoints">
			</argument>
			<argument index="1" name="scene" type="PackedScene">
			</argument>
			<argument index="2" name="time" type="float">
			</argument>
			<description>
			</description>
		</method>
		<method name="common_attach_point_index_get">
			<return type="int">
			</return>
			<argument index="0" name="point" type="int" enum="EntityEnums.CommonCharacterSkeletonPoints">
			</argument>
			<description>
			</description>
		</method>
		<method name="common_attach_point_node_get">
			<return type="Node">
			</return>
			<argument index="0" name="point" type="int" enum="EntityEnums.CommonCharacterSkeletonPoints">
			</argument>
			<description>
			</description>
		</method>
		<method name="common_attach_point_remove">
			<return type="void">
			</return>
			<argument index="0" name="point" type="int" enum="EntityEnums.CommonCharacterSkeletonPoints">
			</argument>
			<argument index="1" name="scene" type="PackedScene">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_animation_player">
			<return type="AnimationPlayer">
			</return>
			<description>
			</description>
		</method>
		<method name="get_animation_tree">
			<return type="AnimationTree">
			</return>
			<description>
			</description>
		</method>
		<method name="get_model_entry">
			<return type="SkeletonModelEntry">
			</return>
			<argument index="0" name="bone_index" type="int">
			</argument>
			<argument index="1" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_model_entry_count">
			<return type="int">
			</return>
			<argument index="0" name="bone_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_model_visual">
			<return type="ModelVisual">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_model_visual_count">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="merge_mesh_array" qualifiers="const">
			<return type="Array">
			</return>
			<argument index="0" name="arr" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_model_visual">
			<return type="void">
			</return>
			<argument index="0" name="vis" type="ModelVisual">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_model_visual_entry">
			<return type="void">
			</return>
			<argument index="0" name="vis" type="ModelVisual">
			</argument>
			<argument index="1" name="ive" type="ModelVisualEntry">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_model_visual_index">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="sort_layers">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="update_nodes">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="animation_player_path" type="NodePath" setter="set_animation_player_path" getter="get_animation_player_path" default="NodePath(&quot;&quot;)">
		</member>
		<member name="animation_tree_path" type="NodePath" setter="set_animation_tree_path" getter="get_animation_tree_path" default="NodePath(&quot;&quot;)">
		</member>
		<member name="entity_type" type="int" setter="set_entity_type" getter="get_entity_type" default="0">
		</member>
		<member name="model_dirty" type="bool" setter="set_model_dirty" getter="get_model_dirty" default="false">
		</member>
		<member name="model_index" type="int" setter="set_model_index" getter="get_model_index" default="0">
		</member>
	</members>
	<constants>
	</constants>
</class>
